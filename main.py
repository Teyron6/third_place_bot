from dotenv import load_dotenv
import os
import telebot
from telebot import types
import json


load_dotenv()
tg_token = os.environ['TG_TOKEN']
bot = telebot.TeleBot(tg_token)
with open("question_answer.json", "r", encoding='utf-8') as f:
    help_info = json.load(f)


# –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ—Å—ã–ª–∞—é—â–∞—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞ (–∫–æ–º–∞–Ω–¥–∞: /start)
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttonA = types.KeyboardButton('–∫–Ω–æ–ø–∫–∞ 1')
    buttonB = types.KeyboardButton('–∫–Ω–æ–ø–∫–∞ 2')
    buttonC = types.KeyboardButton('–í–æ–ø—Ä–æ—Å—ã')

    markup.row(buttonA, buttonB)
    markup.row(buttonC)
    
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Çüëã, —è –±–æ—Ç —à–∫–æ–ª—ã —Ç—Ä–µ—Ç—å–µ –º–µ—Å—Ç–æ\n–ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å:\n„Éª –ù–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å—ã‚ùì\n„Éª –£–∑–Ω–∞—Ç—å –∫–∞–∫–∏–µ –∫—É—Ä—Å—ã —É –Ω–∞—Å –µ—Å—Ç—åüìó\n„Éª –ß–µ–º—É –º—ã –æ–±—É—á–∞–µ–ºüéì\n„Éª –°–≤—è–∑–∞—Ç—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–ºüíª\n\n–ù–∞–∂–º–∏ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è —Ç–µ–º—ã –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µüëá', reply_markup=markup)


# –≠—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(content_types='text')
def message_reply(message):
    text = message.text
    if text == '–í–æ–ø—Ä–æ—Å—ã':
        button_3(message)
    if '–≤–æ–ø—Ä–æ—Å' in text:
        questions_reply(message)


# —Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
def button_3(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttonA = types.KeyboardButton('1 –≤–æ–ø—Ä–æ—Å')
    buttonB = types.KeyboardButton('2 –≤–æ–ø—Ä–æ—Å')
    buttonC = types.KeyboardButton('3 –≤–æ–ø—Ä–æ—Å')
    buttonD = types.KeyboardButton('4 –≤–æ–ø—Ä–æ—Å')

    markup.row(buttonA, buttonB)
    markup.row(buttonC, buttonD)
    text_message = ''
    for q_and_a in help_info['questions']:
        question_num = help_info['questions'].index(q_and_a) + 1
        question_content = q_and_a['question']
        text_message += f'{question_num}, {question_content}, \n'
    bot.send_message(message.chat.id, text_message, reply_markup=markup)


# –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
def questions_reply(message):
    question_number, _ = message.text.split(' ')
    question_id = int(question_number) - 1
    bot.send_message(message.chat.id, help_info['questions'][question_id]['answer'])
    if 'document' in help_info['questions'][question_id]:
        ans_doc = open(help_info['questions'][question_id]['document'], "rb")
        bot.send_document(message.chat.id, ans_doc)


bot.infinity_polling()

