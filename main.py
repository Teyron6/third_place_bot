from dotenv import load_dotenv
import os
import telebot
from telebot import types
import json


load_dotenv()
tg_token = os.environ['TG_TOKEN']
bot = telebot.TeleBot(tg_token)
with open("question_answer.json", "r", encoding='utf-8') as f:
    help_info = json.load(f)
try:
    with open('needHelp.json', 'r', encoding='utf8') as file:
        needHelp = json.load(file)
except FileNotFoundError:
    needHelp = []
    with open("needHelp.json", "w", encoding='utf8') as file:
        json.dump(needHelp, file, ensure_ascii=False)


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttonA = types.KeyboardButton('–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞')
    buttonB = types.KeyboardButton('–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã')

    markup.row(buttonA)
    markup.row(buttonB)
    
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Çüëã, —è –±–æ—Ç —à–∫–æ–ª—ã —Ç—Ä–µ—Ç—å–µ –º–µ—Å—Ç–æ\n–ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å:\n„Éª –ù–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å—ã‚ùì\n„Éª –£–∑–Ω–∞—Ç—å –∫–∞–∫–∏–µ –∫—É—Ä—Å—ã —É –Ω–∞—Å –µ—Å—Ç—åüìó\n„Éª –ß–µ–º—É –º—ã –æ–±—É—á–∞–µ–ºüéì\n„Éª –°–≤—è–∑–∞—Ç—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–ºüíª\n\n–ù–∞–∂–º–∏ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è —Ç–µ–º—ã –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µüëá', reply_markup=markup)


@bot.message_handler(commands=['answer'])  #–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def ts_reply(message):
    if needHelp:
        text = message.text
        found = False
        for user in needHelp:  #—Ü–∏–∫–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if user['username'] in text and str(user['message_id']) in text:
                bot.send_message(user['chat_id'], text[text.lower().find('–æ—Ç–≤–µ—Ç'):])
                needHelp.remove(user)
                with open("needHelp.json", "w", encoding='utf8') as file:
                    json.dump(needHelp, file, ensure_ascii=False)
                found = True
        if not found:
            bot.send_message(os.environ.get('GROUP_ID'),'–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
    else:
        bot.send_message(os.environ.get('GROUP_ID'),'–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–≤–µ—á–µ–Ω—ã')


@bot.message_handler(content_types='text')
def message_reply(message):
    text = message.text
    if text == '–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã' or text == '–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º': #–æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        send_categories(message)
    if text in help_info['categories'].keys(): #–æ—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
        send_questions(message)
    send_answers(message)
    if text == '–ù–∞ –ì–ª–∞–≤–Ω—É—é':
        start(message)
    if text == 'techsupp':
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–í–æ–ø—Ä–æ—Å: ..." –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ')
    if '–í–æ–ø—Ä–æ—Å:' in text:
        if not needHelp:  #–ø—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ —Ñ–∞–π–ª –ø—É—Å—Ç–æ–π
            message_to_ts(message)
        else:
            for user in needHelp:  #–ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ
                if message.from_user.username == user['username']:#–µ—Å–ª–∏ –µ—Å—Ç—å, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
                    bot.send_message(message.chat.id, '–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–æ–ø—Ä–æ—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞')
                    break
                else:
                    message_to_ts(message)


# –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
def send_categories(message):
    categories = list(help_info['categories'].keys())
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for button in categories:
        markup.row(types.KeyboardButton(button))
    markup.row(types.KeyboardButton('–ù–∞ –ì–ª–∞–≤–Ω—É—é'))
    text_message = ''
    for category in categories:
        category_num = categories.index(category) + 1
        text_message += f'{category_num}. {category} \n'
    bot.send_message(message.chat.id, f'–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∞—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö —Ç–µ–º –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:\n{text_message}', reply_markup=markup)


#—Ä–∞—Å–∫—Ä—ã—Ç–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
def send_questions(message):
    questions = list(help_info['categories'][message.text].keys())
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for button in questions:
        markup.row(types.KeyboardButton(button))
    markup.row(types.KeyboardButton('–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º'), types.KeyboardButton('–ù–∞ –ì–ª–∞–≤–Ω—É—é'))
    text_message = ''
    for question in questions:
        question_num = questions.index(question) + 1
        text_message += f'{question_num}. {question} \n'
    bot.send_message(message.chat.id, f'–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —ç—Ç–æ–π —Ç–µ–º–µ:\n{text_message}', reply_markup=markup)


def send_answers(message):
    for category in help_info['categories'].keys():
        if message.text in help_info['categories'][category].keys():
            answer = help_info['categories'][category][message.text]
            if 'media/' in answer:
                ans_doc, caption = answer.split(';')
                ans_doc = open(ans_doc, "rb")
                bot.send_document(message.chat.id, ans_doc, caption=caption)
            else:
                bot.send_message(message.chat.id, answer)


def message_to_ts(message):
    needHelp.append(
        {
            'username' : message.from_user.username,
            'chat_id' : message.chat.id,
            'message_id' : message.message_id
        }
    )
    with open("needHelp.json", "w", encoding='utf8') as file:
        json.dump(needHelp, file, ensure_ascii=False)#—Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(os.environ.get('GROUP_ID'), f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –Ω–∞–ø–∏—Å–∞–ª: "{message.text}", message_id: {message.message_id}')#–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —á–∞—Ç –¢–µ—Ö–ü–æ–¥–¥–µ—Ä–∂–∫–∏


bot.infinity_polling()
